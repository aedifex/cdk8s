orbs:
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0
  slack: circleci/slack@2.0.0
version: 2.1

jobs:
  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      aws-region:
        description: |
          Region in which resources are deployed
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.aws-region>>
      - run:
          command: |
            kubectl get services
          name: Test cluster

  update-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      aws-region:
        description: |
          Region in which resources are deployed
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.aws-region>>
      - run:
          command: |
            kubectl get services
          name: Test cluster
      - run:
          name: Install envar utility (envsubst)
          command: sudo apt-get install gettext-base
      - run:
          name: Update Cluster
          command: |
            cat yaml/hello-kubernetes.custom-message.tmpl | \
            envsubst > yaml/hello-kubernetes.custom-message.yaml && \
            kubectl apply -f yaml/hello-kubernetes.custom-message.yaml --validate=false
      - slack/notify:
          mentions: 'chris'
          webhook: ${SLACK_WEBHOOK}
          message: ":fullyoperational: Pipeline: $CIRCLE_WORKFLOW_ID was successful! \n$CIRCLE_BUILD_URL \nhttps://damp-bastion-21277.herokuapp.com/"
  

workflows:
  provision-cluster:
    jobs:
      - aws-eks/create-cluster:
          cluster-name: another-eks-demo
          aws-region: us-west-2
          context: cdk8s
      - test-cluster:
          cluster-name: another-eks-demo
          aws-region: us-west-2
          context: cdk8s
          requires:
            - aws-eks/create-cluster
      - aws-eks/install-helm-on-cluster:
          cluster-name: another-eks-demo
          aws-region: us-west-2
          context: cdk8s
          requires:
            - aws-eks/create-cluster
      - update-cluster:
          cluster-name: another-eks-demo
          aws-region: us-west-2
          context: cdk8s
          requires:
            - aws-eks/install-helm-on-cluster 
      # - aws-eks/delete-cluster:
      #     cluster-name: another-eks-demo
      #     aws-region: us-west-2
      #     context: cdk8s
      #     requires:
      #       - update-cluster
  

  # build-test-&-deploy:
  #   jobs:
  #     - build-node-app
  #     - setup-heroku-environment
  #     - code-linting:
  #         requires:
  #           - build-node-app
  #     - code-coverage:
  #         requires:
  #           - build-node-app
  #     - vulnerability-scans:
  #         requires:
  #           - build-node-app
  #     - build-docker-image:
  #         requires:
  #           - code-coverage
  #           - vulnerability-scans
  #     - run-integration-tests:
  #         requires:
  #           - build-docker-image
  #     - browser-tests:
  #         requires:
  #           - build-docker-image
  #     - update-cluster:
  #          cluster-name: another-eks-demo
  #          aws-region: us-west-2
  #          context: cdk8s
  #          requires:
  #           - browser-tests
  #           - run-integration-tests
  #           - setup-heroku-environment
  #           - build-docker-image